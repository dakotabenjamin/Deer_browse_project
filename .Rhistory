citation()
--------------------------------------------------------------
#Dakota Benjamin
#2014.03.19
#Script for 315/415 Lab 4
#Statistical Analysis of Data
#--------------------------------------------------------------
rm(list=ls())
library(reshape2)
setwd("C:/Users/Dakota/Dropbox/_CASE/_Spring2014/315/Deer browse project/")
# Look at reservations with the highest animal disturbance
# potentially reservations that are more round in shape and more long in shape
# spcatial autocorrelation
#Read in the Species data
species <- read.csv("PCAP Data/species-list-PCAP.csv")
#read in the plot data
plots <- read.csv("PCAP Data/pcap-plot-info.csv")
plots.RR <- subset(plots, reservation.code=="RR")
#Read in the cover data
cover2010 <- read.csv("PCAP Data/pcap-cover-2010.csv")
cover2011 <- read.csv("PCAP Data/pcap-cover-2011.csv")
allcover <- rbind(cover2010,cover2011)
cover.RR <- merge(allcover, plots.RR)
#Read in the distance data
distance <- read.csv("Dakota_Benjamin_distance.csv")
#Read in the dist data
disturbance <- read.csv("PCAP Data/pcap-disturbance.csv")[1:4]
#Lets manipulate the deer browse so that the ranks are easier to look at
distance$deerbrowse <- 0
distance$deerbrowse[distance$DBCode == "None recorded"] <- 0
distance$deerbrowse[distance$DBCode == "VL"] <- 1
distance$deerbrowse[distance$DBCode == "L"] <- 2
distance$deerbrowse[distance$DBCode == "ML"] <- 3
distance$deerbrowse[distance$DBCode == "M"] <- 4
distance$deerbrowse[distance$DBCode == "MH"] <- 5
distance$deerbrowse[distance$DBCode == "H"] <- 6
distance$deerbrowse[distance$DBCode == "VH"] <- 7
hist(distance$deerbrowse)
View(distance)
methods(reshape2)
dist.deerbrowse <- colsplit(distance$Deer.Browse.Ratings, "=", c("DBCode", "DBLabel"))
distance <- cbind(distance, dist.deerbrowse)
distance$deerbrowse <- 0
distance$deerbrowse[distance$DBCode == "None recorded"] <- 0
distance$deerbrowse[distance$DBCode == "VL"] <- 1
distance$deerbrowse[distance$DBCode == "L"] <- 2
distance$deerbrowse[distance$DBCode == "ML"] <- 3
distance$deerbrowse[distance$DBCode == "M"] <- 4
distance$deerbrowse[distance$DBCode == "MH"] <- 5
distance$deerbrowse[distance$DBCode == "H"] <- 6
distance$deerbrowse[distance$DBCode == "VH"] <- 7
hist(distance$deerbrowse)
distance <- read.csv("Dakota_Benjamin_distance.csv")
#Read in the dist data
disturbance <- read.csv("PCAP Data/pcap-disturbance.csv")[1:4]
#Lets manipulate the deer browse so that the ranks are easier to look at
dist.deerbrowse <- colsplit(distance$Deer.Browse.Ratings, "=", c("DBCode", "DBLabel"))
distance <- cbind(distance, dist.deerbrowse)
distance$deerbrowse <- 0
distance$deerbrowse[distance$DBCode == "None recorded"] <- 0
distance$deerbrowse[distance$DBCode == "VL"] <- 1
distance$deerbrowse[distance$DBCode == "L"] <- 2
distance$deerbrowse[distance$DBCode == "ML"] <- 3
distance$deerbrowse[distance$DBCode == "M"] <- 4
distance$deerbrowse[distance$DBCode == "MH"] <- 5
distance$deerbrowse[distance$DBCode == "H"] <- 6
distance$deerbrowse[distance$DBCode == "VH"] <- 7
hist(distance$deerbrowse)
anova(distance$deerbrowse)
anova(distance$deerbrowse ~ distance$Reservation)
mod1 <- lm(distance$deerbrowse ~ distance$Reservation)
anova(mod1)
summary(mod1)
hist(distance$deerbrowse, 7)
install.packages("sp")
install.packages("rgdal")
library(sp)
library(rgdal)
version()
citation()
install.packages(c("ape", "Hmisc", "picante"))
?readOGR
spa_data <- readOGR("pcap_da_join_subset/")
spa_data <- readOGR("pcap_da_join_subset/", "pcap_da_join_subset")
spa_data <- readOGR("pcap_da_join_subset", "pcap_da_join_subset")
class(spa_data)
slotNames(spa_data)
plot(spa_data)
view(spa_data)
names(spa_data)
head(spa_data)
names(distance)[names(distance)=="site.name"] <- "SITE_NAME"
distance <- merge(distance, spa_data)
?union
mod1 <- aov(deerbrowse, EDGE_DISTANCE, data=distance)
mod1 <- aov(deerbrowse ~ EDGE_DISTANCE, data=distance)
mod1 <- aov(deerbrowse ~ EDGE_DIST, data=distance)
summary(mod1)
mod2 <- aov(deerbrowse ~ EDGE_DIST * DEV_DIST, data=distance)
summary(mod2)
if(TRUE | FALSE)
c(1,2)
mod3 <- aov(deerbrowse ~ EDGE_DIST * DEV_DIST * SANCT_DIST * BOOT_DIST * TRAIL_DIST, data=distance)
summary(mod3)
mod3 <- aov(deerbrowse ~ EDGE_DIST * DEV_DIST * BOOT_DIST * TRAIL_DIST, data=distance)
summary(mod3)
mod3 <- aov(deerbrowse ~ EDGE_DIST * DEV_DIST * BOOT_DIST, data=distance)
summary(mod3)
mod3 <- aov(deerbrowse ~ EDGE_DIST * DEV_DIST, data=distance)
summary(mod3)
mod3 <- aov(deerbrowse ~ EDGE_DIST * DEV_DIST + BOOT_DIST, data=distance)
summary(mod3)
mod3 <- aov(deerbrowse ~ EDGE_DIST * DEV_DIST, data=distance)
summary(mod3)
mod3 <- aov(deerbrowse ~ EDGE_DIST + DEV_DIST, data=distance)
summary(mod3)
reservations <- readOGR("reservations", "reservation_boundaries_public_private_cm")
plot(reservations)
rocky.river <- readOGR("reservation", "reservation_boundaries_public_private_cm_RES__Rocky River Reservation")
rocky.river <- readOGR("reservation", "reservation_boundaries_public_private_cm_RES__Rocky River Reservation")
rocky.river <- readOGR("reservations", "reservation_boundaries_public_private_cm_RES__Rocky River Reservation")
plot(rocky.river)
install.packages("maptools")
?sapply
?slot
sapply(slot(rocky.river, slot, "area")
)
sapply(slot(rocky.river, "polygons"), slot, "area")
plot(rocky.river)
plot(rocky.river)
