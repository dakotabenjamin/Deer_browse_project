names(deerb)[names(deerb)=="site.name"] <- "SITE_NAME"
names(deerb)[names(deerb)=="Deer.Browse.Ratings"] <- "deerbrowse"
deerb <- subset(pcapsummary, !is.na(SITE_NAME))
deerb <- subset(deerb, !is.na(deerbrowse) )
deerb <- subset(pcapsummary, !is.na(site.name))
deerb <- subset(deerb, !is.na(deerbrowse) )
distance <- merge(deerb, spa_data)
mod1 <- aov(deerbrowse ~ EDGE_DIST *DEV_DIST, data=distance)
summary(mod1)
plot(distance$deerbrowse ~ distance$DEV_DIST)
plot(distance$Deer.Browse.Ratings ~ distance$DEV_DIST)
hist(deerb$Deer.Browse.Ratings, breaks = -0.5+0:8)
# Read in the PCAP non-vegetative summary with deer browse data
pcapsummary <- read.csv("PCAP Data/PCAP_4YR_SUMMARY.csv")
pcapsummary$site.name <- as.factor(pcapsummary$site.name)
deerb <- subset(pcapsummary, !is.na(site.name))
deerb <- subset(deerb, !is.na(deerbrowse) )
names(deerb)[names(deerb)=="site.name"] <- "SITE_NAME"
names(deerb)[names(deerb)=="Deer.Browse.Ratings"] <- "deerbrowse"
hist(deerb$deerbrowse, breaks = -0.5+0:8)
#Play with the spatial data
spa_data <- readOGR("pcap_da_join_subset", "pcap_da_join_subset")
# SITE_NAM
distance <- merge(deerb, spa_data)
# A quick analysis of a model shows that there is significance in the DEV_DIST data on the deer browse.
mod1 <- aov(deerbrowse ~ EDGE_DIST * DEV_DIST, data=distance)
summary(mod1)
par(mfcol = c(2,2))
plot(mod1)
plot(distance$deerbrowse ~ distance$DEV_DIST)
par(mfcol = c(1,1))
plot(distance$deerbrowse ~ distance$DEV_DIST)
#regression model
reg1 <- lm(distance$deerbrowse ~ distance$DEER)
reg1 <- lm(distance$deerbrowse ~ distance$DEV_DIST)
summary(reg1)
abline(reg1)
deerb$deerbrowse[deerb$deerbrowse == 7]
deerb$deerbrowse[deerb$deerbrowse == 7] <- 0
hist(deerb$deerbrowse, breaks = -0.5+0:8)
mod1 <- aov(deerbrowse ~ EDGE_DIST * DEV_DIST, data=distance)
summary(mod1)
reg1 <- lm(distance$deerbrowse ~ distance$DEV_DIST)
summary(reg1)
plot(distance$deerbrowse ~ distance$DEV_DIST)
deerb$deerbrowse[deerb$deerbrowse == 7]
hist(deerb$deerbrowse, breaks = -0.5+0:8)
distance <- merge(deerb, spa_data)
mod1 <- aov(deerbrowse ~ EDGE_DIST * DEV_DIST, data=distance)
summary(mod1)
#               Df Sum Sq Mean Sq F value Pr(>F)
# EDGE_DIST     1    3.3   3.316   1.379 0.2410
# DEV_DIST      1    9.3   9.345   3.887 0.0494 *
#   Residuals   395  949.8   2.404
par(mfcol = c(2,2))
plot(mod1)
#The plots
par(mfcol = c(1,1))
plot(distance$deerbrowse ~ distance$DEV_DIST)
#regression model
reg1 <- lm(distance$deerbrowse ~ distance$DEV_DIST)
summary(reg1)
abline(reg1)
mod1 <- aov(deerbrowse ~ EDGE_DIST * DEV_DIST * SANCT_DIST * BOOT_DIST * TRAIL_DIST * COMMUNITY, data=distance)
summary(mod1)
mod1 <- aov(deerbrowse ~ EDGE_DIST * DEV_DIST * SANCT_DIST* TRAIL_DIST * COMMUNITY, data=distance)
summary(mod1)
mod1 <- aov(deerbrowse ~ EDGE_DIST * DEV_DIST * TRAIL_DIST * COMMUNITY, data=distance)
summary(mod1)
mod1 <- aov(deerbrowse ~ EDGE_DIST * DEV_DIST * COMMUNITY, data=distance)
summary(mod1)
plot(distance$deerbrowse ~ distance$COMMUNITY)
DEV_DIST
plot(distance$deerbrowse ~ distance$DEV_DIST)
mod1 <- aov(deerbrowse ~ EDGE_DIST * DEV_DIST + COMMUNITY, data=distance)
summary(mod1)
plot(distance$deerbrowse ~ distance$DEV_DIST)
plot(distance$deerbrowse ~ distance$COMMUNITY)
plot(distance$deerbrowse ~ distance$Community.type)
plot(distance$deerbrowse ~ distance$COMMUNITY)
plot(distance$deerbrowse ~ distance$DEV_DIST)
plot(distance$deerbrowse ~ distance$EDGE_DIST)
#regression model
reg1 <- lm(distance$deerbrowse ~ distance$DEV_DIST)
reg1 <- lm(distance$deerbrowse ~ distance$EDGE_DIST)
summary(reg1)
abline(reg1)
View(deerb)
View(cover2011)
View(disturbance)
plot(distance$deerbrowse, distance$EDGE_DIST)
plot(distance$EDGE_DIST, distance$deerbrowse)
?plot
reg1 <- lm(distance$deerbrowse ~ distance$EDGE_DIST)
summary(reg1)
abline(reg1)
anova(reg1)
reg1 <- lm(distance$deerbrowse ~ distance$DEV_DIST)
summary(reg1)
abline(reg1)
anova(reg1)
library("ape", lib.loc="C:/Users/Dakota/Documents/R/win-library/3.0")
?Moran.I
mat1 <- as.matrix(spa_data[,DEV_DIST:TRAIL_DIST]
)
spa_data@data
spa_data@data[,DEV_DIST]
spa_data@data$DEV_DIST[1]
spa_data@data[["DEV_DIST"]]
spa_data@data[["DEV_DIST":"TRAIL_DIST"]]
mat1 <- as.matrix(spa_data$data[["DEV_DIST"]]
)
mat1 <- as.matrix(as.vector(spa_data$data[["DEV_DIST"]]))
mat1 <- as.matrix(as.vector(spa_data@data[["DEV_DIST"]]))
spa_data@data[["DEV_DIST"]][1]
spa_data@data[["DEV_DIST", "EDGE_DIST"]][1]
#--------------------------------------------------------------
#Dakota Benjamin
#2014.03.19
#Script for 315/415 Lab 4
#Statistical Analysis of Data
#--------------------------------------------------------------
rm(list=ls())
library(reshape2)
library(sp)
library(rgdal)
setwd("C:/Users/Dakota/Dropbox/_CASE/_Spring2014/315/Deer browse project/")
# Look at reservations with the highest animal disturbance
# potentially reservations that are more round in shape and more long in shape
# spcatial autocorrelation
#read in the plot data
plots <- read.csv("PCAP Data/pcap-plot-info.csv")
#Read in the distance data
distance <- read.csv("Dakota_Benjamin_distance.csv")
#Read in the dist data
disturbance <- read.csv("PCAP Data/pcap-disturbance.csv")[1:4]
# #Lets manipulate the deer browse so that the ranks are easier to look at
# dist.deerbrowse <- colsplit(distance$Deer.Browse.Ratings, "=", c("DBCode", "DBLabel"))
# distance <- cbind(distance, dist.deerbrowse)
#
# distance$deerbrowse <- 0
# distance$deerbrowse[distance$DBCode == "None recorded"] <- 7
# distance$deerbrowse[distance$DBCode == "VL"] <- 0
# distance$deerbrowse[distance$DBCode == "L"] <- 1
# distance$deerbrowse[distance$DBCode == "ML"] <- 2
# distance$deerbrowse[distance$DBCode == "M"] <- 3
# distance$deerbrowse[distance$DBCode == "MH"] <- 4
# distance$deerbrowse[distance$DBCode == "H"] <- 6
# distance$deerbrowse[distance$DBCode == "VH"] <- 7
#
# hist(distance$deerbrowse, breaks = -0.5+0:8, ylim=c(0,120), xlab="Deer Browse Rating")
# Read in the PCAP non-vegetative summary with deer browse data
pcapsummary <- read.csv("PCAP Data/PCAP_4YR_SUMMARY.csv")
pcapsummary$site.name <- as.factor(pcapsummary$site.name)
deerb <- subset(pcapsummary, !is.na(site.name))
deerb <- subset(deerb, !is.na(deerbrowse))
names(deerb)[names(deerb)=="site.name"] <- "SITE_NAME"
names(deerb)[names(deerb)=="Deer.Browse.Ratings"] <- "deerbrowse"
deerb$deerbrowse[deerb$deerbrowse == 7] <- 0
hist(deerb$deerbrowse, breaks = -0.5+0:8)
#Play with the spatial data
spa_data <- readOGR("pcap_da_join_subset", "pcap_da_join_subset")
# SITE_NAME: plot number
# PCAP_ID: Unique id?
# POLYGON_ID: probably refers to other metroparks data polygons
# Distance-to-Edge:
# Edges are comprised of roads/RR, APT's, streams, use areas (mowed areas/picnic areas/parking lots/buildings)
#
# "edge_dist": distance to nearest edge (including edges which are streams)
# "dev_dist": distance to nearest developed edge (not including streams)
#
# Distance-to-Trails:
#
# "trail_dist": distance to nearest trail (sanctioned or bootleg)
# "sanct_dist": distance to nearest sanctioned (marked) trail
# "boot_dist": distance to nearest bootleg trail
distance <- merge(deerb, spa_data)
# A quick analysis of a model shows that there is significance in the DEV_DIST data on the deer browse.
mod1 <- aov(deerbrowse ~ EDGE_DIST * DEV_DIST + COMMUNITY, data=distance)
summary(mod1)
#               Df Sum Sq Mean Sq F value Pr(>F)
# EDGE_DIST     1    3.3   3.316   1.379 0.2410
# DEV_DIST      1    9.3   9.345   3.887 0.0494 *
#   Residuals   395  949.8   2.404
par(mfcol = c(2,2))
plot(mod1)
#The plots
par(mfcol = c(1,1))
plot(spa_data)
# Load the Reservation map
reservations <- readOGR("reservations", "reservation_boundaries_public_private_cm")
plot(reservations)
rocky.river <- readOGR("reservations", "reservation_boundaries_public_private_cm_RES__Rocky River Reservation")
plot(rocky.river)
#scatter plot of deer browse level to distance by plot then plot a linear fit
plot(distance$EDGE_DIST, distance$deerbrowse)
#regression model
reg1 <- lm(distance$deerbrowse ~ distance$DEV_DIST)
summary(reg1)
abline(reg1)
anova(reg1)
library(ape)
moran.dists <- as.matrix(dist(cbind(distance$coords.x1, distance$coords.x2)))
moran.dists
moran.dists.inv <- 1/moran.dists
diag(moran.dists.inv) <- 0
Moran.I(distance$deerbrowse, moran.dists.inv)
Moran.I(distance$deerbrowse, moran.dists.inv, na.rm=T)
gisdata <- read.csv("PCAP Data/pcap-gis-data.csv")
moran.dists <- as.matrix(dist(cbind(gisdata$long, gisdata$lat)))
moran.dists.inv <- 1/moran.dists
diag(moran.dists.inv) <- 0
Moran.I(distance$deerbrowse, moran.dists.inv, na.rm=T)
print.CRS(spa_data)
spa_data@proj4string
anova(reg1)
summary(mod1)
mod1 <- aov(deerbrowse ~ EDGE_DIST * DEV_DIST, data=distance)
summary(mod1)
mod1 <- aov(deerbrowse ~ EDGE_DIST + DEV_DIST, data=distance)
summary(mod1)
mod1 <- aov(deerbrowse ~ SANCT_DIST, data=distance)
summary(mod1)
mod1 <- aov(deerbrowse ~ EDGE_DIST, data=distance)
summary(mod1)
mod1 <- aov(deerbrowse ~ DEV_DIST, data=distance)
summary(mod1)
mod1 <- aov(deerbrowse ~ BOOT_DIST, data=distance)
summary(mod1)
mod1 <- aov(deerbrowse ~ TRAIL_DIST, data=distance)
summary(mod1)
mean.dist <- aggregate(distance$DEV_DIST, list(distance$RES), mean)
mean.deerb <- aggregate(distance$deerbrowse, list(distance$RES), mean)
plot(mean.dist$x, mean.deerb$x)
plot(mean.deerb$x ~ mean.dist$x)
plot(mean.deerb$x ~ mean.dist$x)
reg2 <- lm(mean.deerb$x ~ mean.dist$x)
summary(reg1)
abline(reg1)
anova(reg1)
text(mean.dist$x, mean.dist$Group.1)
text(mean.deerb$x ~ mean.dist$x, mean.dist$Group.1)
plot(mean.deerb$x ~ mean.dist$x)
text(mean.deerb$x ~ mean.dist$x, mean.dist$Group.1)
plot(mean.deerb$x ~ mean.dist$x)
text(mean.deerb$x ~ mean.dist$x, mean.dist$Group.1, pos=4)
text(mean.deerb$x ~ mean.dist$x, mean.dist$Group.1, 4)
text(mean.deerb$x ~ mean.dist$x, mean.dist$Group.1, cex=0.6)
?text
text(mean.deerb$x ~ mean.dist$x, labels=mean.dist$Group.1)
text(mean.deerb$x ~ mean.dist$x, labels=mean.dist$Group.1, pos=4)
plot(mean.deerb$x ~ mean.dist$x)
text(mean.deerb$x ~ mean.dist$x, labels=mean.dist$Group.1, pos=4)
plot(mean.deerb$x ~ mean.dist$x)
text(mean.deerb$x ~ mean.dist$x, labels=mean.dist$Group.1, pos=4, cex=0.6)
View(mean.dist)
View(mean.deerb)
mean.dist <- subset(aggregate(distance$DEV_DIST, list(distance$RES), mean), x<300)
plot(mean.deerb$x ~ mean.dist$x)
mean.dist <- merge(aggregate(distance$deerbrowse, list(distance$RES), mean))
mean.dist <- merge(mean.dist, aggregate(distance$deerbrowse, list(distance$RES), mean))
View(mean.dist)
mean.dist <- subset(aggregate(distance$DEV_DIST, list(distance$RES), mean), x<300)
mean.deer <-aggregate(distance$deerbrowse, list(distance$RES), mean)
mean.all <- merge(mean.dist, mean.deer)
mean.all <- cbind(mean.dist, mean.deer)
mean.dist <- aggregate(distance$DEV_DIST, list(distance$RES), mean)
mean.deer <-aggregate(distance$deerbrowse, list(distance$RES), mean)
mean.all <- merge(mean.dist, mean.deer)
mean.dist <- aggregate(distance$DEV_DIST, list(distance$RES), mean)
mean.deer <-aggregate(distance$deerbrowse, list(distance$RES), mean)
mean.all <- merge(mean.dist, mean.deer)
mean.all <- cbind(mean.dist, mean.deer)
mean.all <- merge(mean.dist, mean.deer, by = Group.1)
mean.all <- merge(mean.dist, mean.deer, by = "Group.1")
mean.all <- subset(merge(mean.dist, mean.deer, by = "Group.1"), x.x<300)
plot(mean.all$x.x ~ mean.all$x.y)
plot(mean.all$x.x, mean.all$x.y)
text(mean.all$x.x, mean.all$x.y, labels=mean.all$Group.1, pos=4, cex=0.6)
reg2 <- lm(mean.all$x.y ~ mean.all$x.x)
summary(reg1)
summary(reg2)
abline(reg2)
plot(anova)
plot(reg1)
anova(reg2)
plot(reg2)
mean.dist <- aggregate(distance$DEV_DIST, list(distance$RES), mean)
mean.deer <-aggregate(distance$deerbrowse, list(distance$RES), mean)
mean.all <- subset(merge(mean.dist, mean.deer, by = "Group.1"), x.x<300)
plot(mean.all$x.x, mean.all$x.y)
text(mean.all$x.x, mean.all$x.y, labels=mean.all$Group.1, pos=4, cex=0.6)
reg2 <- lm(mean.all$x.y ~ mean.all$x.x)
summary(reg2)
abline(reg2)
anova(reg2)
par(mfcol = c(2,2))
plot(reg2)
mean.all$logdeer <- log(mean.all$x.y)
plot(mean.all$x.x, mean.all$logdeer)
par(mfcol=c(1,1))
plot(mean.all$x.x, mean.all$logdeer)
text(mean.all$x.x, mean.all$logdeer, labels=mean.all$Group.1, pos=4, cex=0.6)
reg2 <- lm(mean.all$logdeer ~ mean.all$x.x)
View(mean.all)
mean.all <- subset(merge(mean.dist, mean.deer, by = "Group.1"), x.x<300 & x.x<0)
mean.all <- subset(merge(mean.dist, mean.deer, by = "Group.1"), x.x<300 & x.x>0)
View(mean.all)
mean.all <- subset(merge(mean.dist, mean.deer, by = "Group.1"), x.x<300 & x.y>0)
#log scale on the mean
mean.all$logdeer <- log(mean.all$x.y)
par(mfcol=c(1,1))
plot(mean.all$x.x, mean.all$logdeer)
text(mean.all$x.x, mean.all$logdeer, labels=mean.all$Group.1, pos=4, cex=0.6)
reg2 <- lm(mean.all$logdeer ~ mean.all$x.x)
summary(reg2)
abline(reg2)
anova(reg2)
par(mfcol = c(2,2))
mean.all <- subset(merge(mean.dist, mean.deer, by = "Group.1"), x.y>0) # x.x<300 &
#log scale on the mean
mean.all$logdeer <- log(mean.all$x.y)
par(mfcol=c(1,1))
plot(mean.all$x.x, mean.all$logdeer)
text(mean.all$x.x, mean.all$logdeer, labels=mean.all$Group.1, pos=4, cex=0.6)
reg2 <- lm(mean.all$logdeer ~ mean.all$x.x)
summary(reg2)
abline(reg2)
mean.all$logdeer <- 1/log(mean.all$x.y)
par(mfcol=c(1,1))
plot(mean.all$x.x, mean.all$logdeer)
mean.all$logdeer <- exp(mean.all$x.y)
par(mfcol=c(1,1))
plot(mean.all$x.x, mean.all$logdeer)
mean.all <- subset(merge(mean.dist, mean.deer, by = "Group.1"), x.y>0) # x.x<300 &
par(mfcol=c(1,1))
plot(mean.all$x.x, mean.all$x.y)
text(mean.all$x.x, mean.all$x.y, labels=mean.all$Group.1, pos=4, cex=0.6)
reg2 <- lm(mean.all$x.y mean.all$x.x)
summary(reg2)
reg2 <- lm(mean.all$x.y, mean.all$x.x)
reg2 <- lm(mean.all$x.y ~ mean.all$x.x)
summary(reg2)
abline(reg2)
mean.all <- subset(merge(mean.dist, mean.deer, by = "Group.1"), x.x<300 & x.y>0)
#log scale on the mean
mean.all$logdeer <- log(mean.all$x.y)
par(mfcol=c(1,1))
plot(mean.all$x.x, mean.all$x.y)
text(mean.all$x.x, mean.all$x.y, labels=mean.all$Group.1, pos=4, cex=0.6)
reg2 <- lm(mean.all$x.y ~ mean.all$x.x)
summary(reg2)
abline(reg2)
hist(deerb$deerbrowse, breaks = -0.5+0:8)
mean.dist <- aggregate(distance$EDGE_DIST, list(distance$RES), mean)
mean.deer <-aggregate(distance$deerbrowse, list(distance$RES), mean)
mean.all <- subset(merge(mean.dist, mean.deer, by = "Group.1"), x.x<300 & x.y>0)
#log scale on the mean
mean.all$logdeer <- log(mean.all$x.y)
par(mfcol=c(1,1))
plot(mean.all$x.x, mean.all$x.y)
text(mean.all$x.x, mean.all$x.y, labels=mean.all$Group.1, pos=4, cex=0.6)
reg2 <- lm(mean.all$x.y ~ mean.all$x.x)
summary(reg2)
abline(reg2)
anova(reg2)
par(mfcol = c(2,2))
plot(reg2)
spa_data$RES[spa_data$REs == "Euclis Creek"]
spa_data$RES[spa_data$RES
]
spa_data$RES[spa_data$RES == "Euclis Creek"]
spa_data$RES[spa_data$RES == "Euclis Creek"] <- "Euclid Creek"
spa_data$RES[spa_data$RES == "Euclis Creek"]
spa_data$RES[spa_data$RES]
spa_data$RES[spa_data$RES == "Euclis Creek"]
mean.dist <- aggregate(distance$EDGE_DIST, list(distance$RES), mean)
View(mean.dist)
mean.dist <- aggregate(distance$EDGE_DIST, list(distance$RES), mean)
View(mean.dist)
mean.dist
rm(list=ls())
rm(list=ls())
library(reshape2)
library(sp)
library(rgdal)
setwd("C:/Users/Dakota/Dropbox/_CASE/_Spring2014/315/Deer browse project/")
# Look at reservations with the highest animal disturbance
# potentially reservations that are more round in shape and more long in shape
# spcatial autocorrelation
#read in the plot data
plots <- read.csv("PCAP Data/pcap-plot-info.csv")
#Read in the distance data
distance <- read.csv("Dakota_Benjamin_distance.csv")
#Read in the dist data
disturbance <- read.csv("PCAP Data/pcap-disturbance.csv")[1:4]
#----
# #Lets manipulate the deer browse so that the ranks are easier to look at
#----
# dist.deerbrowse <- colsplit(distance$Deer.Browse.Ratings, "=", c("DBCode", "DBLabel"))
# distance <- cbind(distance, dist.deerbrowse)
#
# distance$deerbrowse <- 0
# distance$deerbrowse[distance$DBCode == "None recorded"] <- 7
# distance$deerbrowse[distance$DBCode == "VL"] <- 0
# distance$deerbrowse[distance$DBCode == "L"] <- 1
# distance$deerbrowse[distance$DBCode == "ML"] <- 2
# distance$deerbrowse[distance$DBCode == "M"] <- 3
# distance$deerbrowse[distance$DBCode == "MH"] <- 4
# distance$deerbrowse[distance$DBCode == "H"] <- 6
# distance$deerbrowse[distance$DBCode == "VH"] <- 7
#
# hist(distance$deerbrowse, breaks = -0.5+0:8, ylim=c(0,120), xlab="Deer Browse Rating")
#----
#A basic histogram of the deer browse rankings
#-----
# Read in the PCAP non-vegetative summary with deer browse data
pcapsummary <- read.csv("PCAP Data/PCAP_4YR_SUMMARY.csv")
pcapsummary$site.name <- as.factor(pcapsummary$site.name)
deerb <- subset(pcapsummary, !is.na(site.name))
deerb <- subset(deerb, !is.na(deerbrowse))
names(deerb)[names(deerb)=="site.name"] <- "SITE_NAME"
names(deerb)[names(deerb)=="Deer.Browse.Ratings"] <- "deerbrowse"
deerb$deerbrowse[deerb$deerbrowse == 7] <- 0
hist(deerb$deerbrowse, breaks = -0.5+0:8)
#----
#Play with the spatial data
#----
spa_data <- readOGR("pcap_da_join_subset", "pcap_da_join_subset")
spa_data$RES[spa_data$RES == "Euclis Creek"] <- "Euclid Creek"
# SITE_NAME: plot number
# PCAP_ID: Unique id?
# POLYGON_ID: probably refers to other metroparks data polygons
# Distance-to-Edge:
# Edges are comprised of roads/RR, APT's, streams, use areas (mowed areas/picnic areas/parking lots/buildings)
#
# "edge_dist": distance to nearest edge (including edges which are streams)
# "dev_dist": distance to nearest developed edge (not including streams)
#
# Distance-to-Trails:
#
# "trail_dist": distance to nearest trail (sanctioned or bootleg)
# "sanct_dist": distance to nearest sanctioned (marked) trail
# "boot_dist": distance to nearest bootleg trail
distance <- merge(deerb, spa_data)
# A quick analysis of a model shows that there is significance in the DEV_DIST data on the deer browse.
mod1 <- aov(deerbrowse ~ TRAIL_DISTm , data=distance)
summary(mod1)
#               Df Sum Sq Mean Sq F value Pr(>F)
# EDGE_DIST     1    3.3   3.316   1.379 0.2410
# DEV_DIST      1    9.3   9.345   3.887 0.0494 *
#   Residuals   395  949.8   2.404
par(mfcol = c(2,2))
plot(mod1)
#The plots
par(mfcol = c(1,1))
plot(spa_data)
#----
#Mapping the reservations
#--------
# Load the Reservation map
reservations <- readOGR("reservations", "reservation_boundaries_public_private_cm")
plot(reservations)
rocky.river <- readOGR("reservations", "reservation_boundaries_public_private_cm_RES__Rocky River Reservation")
plot(rocky.river)
#----
# A Linear Regression Model of deer browse level by distance from nearest developed edge
#------
#scatter plot of deer browse level to distance by plot then plot a linear fit
plot(distance$EDGE_DIST, distance$deerbrowse)
#regression model
reg1 <- lm(distance$deerbrowse ~ distance$DEV_DIST)
summary(reg1)
abline(reg1)
anova(reg1)
#----
# A Linear Regression Model of deer browse by average nearest developed edge by reservation
#-----
mean.dist <- aggregate(distance$EDGE_DIST, list(distance$RES), mean)
mean.deer <-aggregate(distance$deerbrowse, list(distance$RES), mean)
mean.all <- subset(merge(mean.dist, mean.deer, by = "Group.1"), x.x<300 & x.y>0)
#log scale on the mean
mean.all$logdeer <- log(mean.all$x.y)
par(mfcol=c(1,1))
plot(mean.all$x.x, mean.all$x.y)
text(mean.all$x.x, mean.all$x.y, labels=mean.all$Group.1, pos=4, cex=0.6)
reg2 <- lm(mean.all$x.y ~ mean.all$x.x)
summary(reg2)
mean.all <- subset(merge(mean.dist, mean.deer, by = "Group.1"), x.x<300) # & x.y>0
#log scale on the mean
mean.all$logdeer <- log(mean.all$x.y)
mean.dist <- aggregate(distance$EDGE_DIST, list(distance$RES), mean)
mean.deer <-aggregate(distance$deerbrowse, list(distance$RES), mean)
mean.all <- subset(merge(mean.dist, mean.deer, by = "Group.1"), x.x<300) # & x.y>0
#log scale on the mean
mean.all$logdeer <- log(mean.all$x.y)
par(mfcol=c(1,1))
plot(mean.all$x.x, mean.all$x.y)
text(mean.all$x.x, mean.all$x.y, labels=mean.all$Group.1, pos=4, cex=0.6)
reg2 <- lm(mean.all$x.y ~ mean.all$x.x)
summary(reg2)
View(mean.all)
mean.all
mean.deer
mean.deer <-aggregate(distance$deerbrowse, list(distance$RES), mean)
mean.all <- subset(merge(mean.dist, mean.deer, by = "Group.1"), x.x<300) # & x.y>0
#log scale on the mean
mean.deer
distance[SITE_NAME == "1003"]
distance["SITE_NAME" == "1003"]
distance[distance$SITE_NAME == "1003"]
View(distance)
